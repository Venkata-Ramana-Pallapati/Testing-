name: Deploy Backend to AKS

on:
  push:
    branches:
      - main  # Change this if needed

jobs:
  build-and-push:
    name: Build and Push Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Backend Docker Image
        run: |
          cd Demo  # Change directory to where the Dockerfile is
          docker build -t my-backend:latest .
          docker tag my-backend:latest ${{ secrets.DOCKER_USERNAME }}/my-backend:latest
      - name: Push Backend Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/my-backend:latest


      - name: Build frontend Docker Image
        run: |
          cd Frontend  # Change directory to where the Dockerfile is
          docker build -t my-frontend0:latest .
          docker tag my-frontend0:latest ${{ secrets.DOCKER_USERNAME }}/my-frontend0:latest
      - name: Push frontend Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/my-frontend0:latest


  deploy-to-aks:
    name: Deploy to AKS
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS Credentials
        run: |
          az aks get-credentials --resource-group ${{ secrets.AZURE_RG }} --name ${{ secrets.AKS_CLUSTER }}
      - name: Create Namespace if not exists
        run: |
          kubectl get namespace frontend || kubectl create namespace frontend
      - name: Apply Kubernetes Manifests
        run: |
          cd manifests
          kubectl apply -f backend-deployment.yaml
          kubectl apply -f backend-service.yaml
      - name: Wait for LoadBalancer IP
        run: |
          echo "Waiting for backend LoadBalancer to be assigned an external IP..."
          sleep 30  # Allow time for IP assignment

          # Get the correct external IP
          export BACKEND_IP=$(kubectl get svc backend-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          echo "Backend IP is $BACKEND_IP"

          # Ensure it is correctly stored in the Frontend .env file
          echo "VITE_BACKEND_URL=http://$BACKEND_IP:8000" > Frontend/.env

          cat Frontend/.env  # Debugging step to verify the value

      - name:  again Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin


      - name:  RE Build frontend Docker Image
        run: |
          cd Frontend  # Change directory to where the Dockerfile is
          docker build -t my-frontend0:latest .
          docker tag my-frontend0:latest venkat345/my-frontend0:latest
      - name: Push frontend Docker Image to Docker Hub
        run: docker push venakt345/my-frontend0:latest



      
      - name : apply kubernets for fronetnd
        run: |
          cd manifests
          kubectl apply -f frontend-deployment.yaml
          kubectl apply -f frontend-service.yaml
      - name: Rollback on Failure
        if: failure()
        run: |
          echo "Deployment failed. Rolling back..."
          kubectl rollout undo deployment backend-deployment1 -n default
          kubectl rollout undo deployment frontend-deployment9 -n default
